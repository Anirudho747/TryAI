Test Cases for "Move Unused Items to Buy Later" Feature**

| **Test Case ID** | **Test Case Description** | **Preconditions** | **Steps** | **Expected Result** |
|-------------------|---------------------------|--------------------|------------|-----------------------|
| 1 | **Add Multiple Items to Cart** | User is logged in and has access to the ecommerce web application. | 1. Launch the ecommerce web application. <br> 2. Navigate to the product listing page. <br> 3. Add multiple items to the cart. | All selected items are successfully added to the cart. |
| 2 | **Move Selected Items to Buy Later** | User has multiple items in their cart. | 1. Launch the ecommerce web application. <br> 2. Navigate to the cart page. <br> 3. Select specific items to move to the "Buy Later" section. <br> 4. Click the "Move to Buy Later" button. | Selected items are removed from the cart and added to the "Buy Later" section. |
| 3 | **View Buy Later Section** | User has items in the "Buy Later" section. | 1. Launch the ecommerce web application. <br> 2. Navigate to the "Buy Later" section. | The "Buy Later" section displays all items moved from the cart. |
| 4 | **Add Items Back to Cart from Buy Later** | User has items in the "Buy Later" section. | 1. Launch the ecommerce web application. <br> 2. Navigate to the "Buy Later" section. <br> 3. Select specific items to add back to the cart. <br> 4. Click the "Add to Cart" button. | Selected items are removed from the "Buy Later" section and added back to the cart. |
| 5 | **Move All Items to Buy Later** | User has multiple items in their cart. | 1. Launch the ecommerce web application. <br> 2. Navigate to the cart page. <br> 3. Select all items in the cart. <br> 4. Click the "Move to Buy Later" button. | All items are removed from the cart and added to the "Buy Later" section. The cart is now empty. |
| 6 | **Move Some Items and Keep Others** | User has multiple items in their cart. | 1. Launch the ecommerce web application. <br> 2. Navigate to the cart page. <br> 3. Select specific items to move to the "Buy Later" section. <br> 4. Click the "Move to Buy Later" button. <br> 5. Add new items to the cart. | Selected items are moved to the "Buy Later" section, and new items are added to the cart. |
| 7 | **Persistence of Buy Later Items** | User has items in the "Buy Later" section. | 1. Launch the ecommerce web application. <br> 2. Navigate to the "Buy Later" section. <br> 3. Log out of the application. <br> 4. Log back in and navigate to the "Buy Later" section. | The "Buy Later" section still displays all items moved from the cart. |
| 8 | **Duplicate Items in Buy Later** | User has duplicate items in the cart. | 1. Launch the ecommerce web application. <br> 2. Add the same product multiple times to the cart. <br> 3. Move one instance of the product to the "Buy Later" section. <br> 4. Add the product back to the cart from the "Buy Later" section. | The product is successfully moved to and from the "Buy Later" section without duplication issues. |
| 9 | **Performance Test for Buy Later API** | The "Buy Later" API endpoint is configured. | 1. Simulate a large number of concurrent requests to the "Buy Later" API endpoint. <br> 2. Measure the response time and system behavior. | The API endpoint handles the load without performance degradation or errors. |
| 10 | **Security Test for Buy Later Section** | User has items in the "Buy Later" section. | 1. Launch the ecommerce web application. <br> 2. Navigate to the "Buy Later" section. <br> 3. Attempt to access another user's "Buy Later" section. | Access is denied, and only the logged-in user's "Buy Later" items are displayed. |
| 11 | **Remove Items from Buy Later** | User has items in the "Buy Later" section. | 1. Launch the ecommerce web application. <br> 2. Navigate to the "Buy Later" section. <br> 3. Select specific items to remove permanently. <br> 4. Click the "Remove" button. | Selected items are permanently removed from the "Buy Later" section. |
| 12 | **API Test for Moving Items** | The "Buy Later" API endpoint is configured. | 1. Send a POST request to the "Buy Later" API endpoint with valid item IDs. <br> 2. Verify the response status code. <br> 3. Check the database to ensure items are moved. | The API endpoint returns a success response, and items are moved to the "Buy Later" section. |
| 13 | **Browser and Device Compatibility** | The "Buy Later" feature is implemented across different browsers and devices. | 1. Test the "Buy Later" feature on different browsers (Chrome, Firefox, Safari). <br> 2. Test the "Buy Later" feature on different devices (Desktop, Laptop, Mobile). | The "Buy Later" feature works consistently across all tested browsers and devices. |
| 14 | **Negative Test for Empty Cart** | User has an empty cart. | 1. Launch the ecommerce web application. <br> 2. Navigate to the cart page. <br> 3. Attempt to move items to the "Buy Later" section. | An error message is displayed indicating that the cart is empty. |

---

### **Notes:**
- Ensure all test cases are executed in different environments (e.g., QA, Staging, Production) to validate functionality across all stages.
- Perform regression testing after any code changes to ensure the "Buy Later" feature remains stable.
- Include automated tests for API endpoints and critical user flows to reduce manual testing effort.
- Conduct performance testing under varying loads to ensure the system can handle peak traffic.
- Validate security testing to ensure that unauthorized users cannot access the "Buy Later" section of other users.